# Example config for CI/CD between Heroku and Gitlab by </unchained
image: node:latest

cache:
  paths:
    - node_modules/

before_script:
  - echo "Job `$CI_JOB_NAME` started."

after_script:
  - echo "Job `$CI_JOB_NAME` ended."

stages:
  - build
  - test
  - deploy

build:
  type: build
  script:
    - npm install
    - gulp build
  artifacts:
    name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    expire_in: 2 weeks
  only:
    - master
    - staging
    - production

test:
  type: test
  dependencies:
    - build
  script:
    - npm test

deploy_development:
  type: deploy
  dependencies:
    - build
    - test
  environment:
    name: development
    url: https://development.$APP_DOMAIN
  script:
    - apt-get update -qy
    - apt-get install -y ruby ruby-dev rubygems-integration
    - gem install dpl
    - dpl --provider=heroku --app=$HEROKU_DEVELOPMENT_APP --api-key=$HEROKU_DEVELOPMENT_API_KEY --skip-cleanup
  only:
    - master

deploy_staging:
  type: deploy
  dependencies:
    - build
    - test
  environment:
    name: staging
    url: https://staging.$APP_DOMAIN
  script:
    - apt-get update -qy
    - apt-get install -y ruby-dev
    - gem install dpl
    - dpl --provider=heroku --app=$HEROKU_STAGING_APP --api-key=$HEROKU_STAGING_API_KEY --skip-cleanup
  only:
    - staging

deploy_production:
  type: deploy
  dependencies:
    - build
    - test
  environment:
    name: production
    url: https://$APP_DOMAIN
  script:
    - apt-get update -qy
    - apt-get install -y ruby-dev
    - gem install dpl
    - dpl --provider=heroku --app=$HEROKU_PRODUCTION_APP --api-key=$HEROKU_PRODUCTION_API_KEY --skip-cleanup
  only:
  - production
